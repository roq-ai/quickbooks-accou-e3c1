generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model account {
  id             String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  account_number String        @db.VarChar(255)
  account_type   String        @db.VarChar(255)
  balance        Int
  created_at     DateTime      @default(now()) @db.Timestamp(6)
  updated_at     DateTime      @default(now()) @db.Timestamp(6)
  journal        journal[]
  transaction    transaction[]
}

model inventory {
  id           String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  product_name String   @db.VarChar(255)
  quantity     Int
  price        Int
  supplier     String   @db.VarChar(255)
  created_at   DateTime @default(now()) @db.Timestamp(6)
  updated_at   DateTime @default(now()) @db.Timestamp(6)
}

model journal {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  entry_date  DateTime @db.Timestamp(6)
  description String   @db.VarChar(255)
  debit       Int
  credit      Int
  account_id  String   @db.Uuid
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  account     account  @relation(fields: [account_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model team {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?  @db.VarChar(255)
  name        String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user_id     String   @db.Uuid
  tenant_id   String   @db.VarChar(255)
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model transaction {
  id               String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  transaction_type String   @db.VarChar(255)
  amount           Int
  transaction_date DateTime @db.Timestamp(6)
  account_id       String   @db.Uuid
  created_at       DateTime @default(now()) @db.Timestamp(6)
  updated_at       DateTime @default(now()) @db.Timestamp(6)
  account          account  @relation(fields: [account_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String   @unique @db.VarChar(255)
  firstName   String?  @db.VarChar(255)
  lastName    String?  @db.VarChar(255)
  roq_user_id String   @db.VarChar(255)
  tenant_id   String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  team        team[]
}
